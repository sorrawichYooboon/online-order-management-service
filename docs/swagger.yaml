basePath: /
definitions:
  domain.Order:
    properties:
      createdAt:
        type: string
      customerName:
        type: string
      id:
        type: integer
      items:
        items:
          $ref: '#/definitions/domain.OrderItem'
        type: array
      status:
        type: string
      totalAmount:
        type: number
      updatedAt:
        type: string
    type: object
  domain.OrderItem:
    properties:
      id:
        type: integer
      orderID:
        type: integer
      price:
        type: number
      productName:
        type: string
      quantity:
        type: integer
    type: object
  dto.CreateOrderItemDTO:
    properties:
      price:
        example: 19.99
        minimum: 0
        type: number
      product_name:
        example: Wireless Mouse
        type: string
      quantity:
        example: 2
        type: integer
    required:
    - price
    - product_name
    - quantity
    type: object
  dto.CreateOrderRequestDTO:
    properties:
      customer_name:
        example: Alice Smith
        type: string
      items:
        items:
          $ref: '#/definitions/dto.CreateOrderItemDTO'
        type: array
      status:
        example: PENDING
        type: string
    required:
    - customer_name
    - items
    - status
    type: object
  dto.CreateOrdersResponseDTO:
    properties:
      results:
        items:
          $ref: '#/definitions/dto.OrderInsertResultDTO'
        type: array
      summary:
        $ref: '#/definitions/dto.OrderInsertSummaryDTO'
    type: object
  dto.OrderInsertResultDTO:
    properties:
      error:
        type: string
      index:
        type: integer
      order_id:
        type: integer
    type: object
  dto.OrderInsertSummaryDTO:
    properties:
      failed:
        type: integer
      success:
        type: integer
      total:
        type: integer
    type: object
  dto.UpdateOrderStatusRequestDTO:
    properties:
      status:
        enum:
        - PENDING
        - PAID
        - SHIPPED
        - CANCELED
        example: PAID
        type: string
    required:
    - status
    type: object
  httperror.HTTPError:
    properties:
      code:
        type: string
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: KKP Interview - API for managing online orders and order items
  title: Online Order Management Service API
  version: "1.0"
paths:
  /orders:
    get:
      consumes:
      - application/json
      description: Returns paginated list of orders with items
      parameters:
      - description: Page number
        example: 1
        in: query
        name: page
        required: true
        type: integer
      - description: Page size
        example: 10
        in: query
        name: page_size
        required: true
        type: integer
      - description: Sort direction
        enum:
        - asc
        - desc
        example: desc
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Order'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperror.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperror.HTTPError'
      summary: Get all orders with pagination
      tags:
      - Orders
    post:
      consumes:
      - application/json
      description: Create orders with multiple items concurrently and transactionally
      parameters:
      - description: Order creation request
        in: body
        name: request
        required: true
        schema:
          items:
            $ref: '#/definitions/dto.CreateOrderRequestDTO'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: Partial success
          schema:
            $ref: '#/definitions/dto.CreateOrdersResponseDTO'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.CreateOrdersResponseDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperror.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperror.HTTPError'
      summary: Create multiple orders
      tags:
      - Orders
  /orders/{order_id}:
    get:
      consumes:
      - application/json
      description: Retrieves full order detail by its ID
      parameters:
      - description: Order ID
        example: 1
        in: path
        name: order_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Order'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperror.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperror.HTTPError'
      summary: Get an order by ID
      tags:
      - Orders
  /orders/{order_id}/status:
    put:
      consumes:
      - application/json
      description: Transactionally update order status by ID
      parameters:
      - description: Order ID
        in: path
        name: order_id
        required: true
        type: integer
      - description: New order status (PENDING, PAID, SHIPPED, CANCELED)
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateOrderStatusRequestDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperror.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperror.HTTPError'
      summary: Update the status of an order
      tags:
      - Orders
swagger: "2.0"
